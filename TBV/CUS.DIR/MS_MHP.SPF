PROC MS_MHP(INT M_NT,INT M_TC,REAL M_DIA,REAL M_Z,REAL M_TOLL,INT M_ORIG,INT M_CHECK,STRING[32] M_TOOLN,INT M_TOOLD,INT M_DUPLO) SAVE
DEF REAL _XP,_XM,_YP,_YM,MS_ABS_INPUT
DEF REAL PP_INX,PM_INX,PP_INY,PM_INY
DEF REAL M_POSZ,M_POSX,M_POSXC,M_POSY
DEF STRING[60] FILEINI
DEF STRING[60] AUXIN
DEF STRING[60] AUXOUT
DEF STRING[100] SCRIVI
DEF INT T_INT

;*************************************
; CICLO DI MISURA HOLE-PIVOT MANUALE
; SIEMENS 840D/828D  		 
; VER 10.1 15/02/2016   
;************************************

;** CONTROLLO SE SIMULAZIONE O TEST************
IF $P_SEARCH OR $P_ISTEST OR $P_SIM OR $P_DRYRUN
 RET
ENDIF
;**********************************************

;***** GESTIONE PIU SONDE**********************
FILEINI="/_N_CUS_DIR/_N_MS_INIS"<<M_NT<<"_SPF"
AUXIN="/_N_CUS_DIR/_N_MS_IN"<<M_NT<<"_SPF"
AUXOUT="/_N_CUS_DIR/_N_MS_OUT"<<M_NT<<"_SPF"
STOPRE
CALL FILEINI  ;richiamo file ini
IF MS_ACT==1
 M=(MS_SON)
 G4 F1.2
ENDIF
CALL AUXIN    ;richiamo ausiliare ingresso
;**********************************************

;***** PARAMETRI DEL CICLO********
G1 F=MS_RAPID
IF (MS_X_SHIFT==0) AND (MS_Y_SHIFT==0)		; ADDED FOR TOOL SHIFT
	MS_D=$TC_DP6[$P_TOOLNO,$P_TOOL]
ELSE
	MS_D=MS_R_SPHERE					
ENDIF

MS_ABS_INPUT=ABS(MS_INPUTS)
M_POSZ=$AA_IW[MS_Z]-MS_L_TOOL
M_POSX=$AA_IW[MS_X]+MS_X_SHIFT
M_POSY=$AA_IW[MS_Y]+MS_Y_SHIFT

M_Z=M_Z-MS_D

IF M_TC==1 ;misuro un perno
 PP_INX=-(M_DIA/2)-MS_D-MS_CS
 PM_INX=(M_DIA/2)+MS_D+MS_CS
 PP_INY=PP_INX
 PM_INY=PM_INX
ENDIF

IF (M_TC==2) OR (M_TC==3) ;misuro un foro
 PP_INX=(M_DIA/2)-MS_D-MS_CS
 PM_INX=-(M_DIA/2)+MS_D+MS_CS
 PP_INY=PP_INX
 PM_INY=PM_INX
ENDIF
;________________________________
;misura X+
;________________________________
MS_MMOVEB(MS_X,PP_INX,)
;MS_MOVEB(MS_Y,0,)
MS_MMOVEB(MS_Z,M_Z,)
MS_TCHS(MS_X,1)
_XP=MS_POS1-MSXP[M_NT]
IF M_TC<>2
 MS_MOVEB(MS_Z,M_POSZ,)
ENDIF

;________________________________
;misura X-
;________________________________
MS_MOVEB(MS_X,M_POSX,)
MS_MMOVEB(MS_X,PM_INX,)
;MS_MOVEB(MS_Y,0,)
IF M_TC<>2
MS_MMOVEB(MS_Z,M_Z,)
ENDIF
MS_TCHS(MS_X,-1)
_XM=MS_POS1-MSXM[M_NT]
IF M_TC<>2
 MS_MOVEB(MS_Z,M_POSZ,)
ENDIF
MS_CX=(_XP+_XM)/2

;________________________________
;misura Y+
;________________________________
MS_MOVEB(MS_X,MS_CX,)
MS_MMOVEB(MS_Y,PP_INY,)
IF M_TC<>2
MS_MMOVEB(MS_Z,M_Z,)
ENDIF
MS_TCHS(MS_Y,1)
_YP=MS_POS1-MSYP[M_NT]
IF M_TC<>2
 MS_MOVEB(MS_Z,M_POSZ,)
ENDIF

;________________________________
;misura Y-
;________________________________
MS_MOVEB(MS_Y,M_POSY,)
MS_MMOVEB(MS_Y,PM_INY,)
IF M_TC<>2
MS_MMOVEB(MS_Z,M_Z,)
ENDIF
MS_TCHS(MS_Y,-1)
_YM=MS_POS1-MSYM[M_NT]
IF M_TC<>2
 MS_MOVEB(MS_Z,M_POSZ,)
ENDIF
MS_CY=(_YP+_YM)/2

;________________________________
;misura X+
;________________________________
MS_MOVEB(MS_Y,MS_CY,)
M_POSXC=$AA_IW[MS_X]+MS_X_SHIFT
MS_MMOVEB(MS_X,PP_INX,)
IF M_TC<>2
MS_MMOVEB(MS_Z,M_Z,)
ENDIF
MS_TCHS(MS_X,1)
_XP=MS_POS1-MSXP[M_NT]
IF M_TC<>2
 MS_MOVEB(MS_Z,M_POSZ,)
ENDIF

;________________________________
;misura X-
;________________________________
MS_MOVEB(MS_X,M_POSXC,)
MS_MMOVEB(MS_X,PM_INX,)
IF M_TC<>2
MS_MMOVEB(MS_Z,M_Z,)
ENDIF
MS_TCHS(MS_X,-1)
_XM=MS_POS1-MSXM[M_NT]
MS_MOVEB(MS_Z,M_POSZ,)
;AX[MS_X]=0 AX[MS_Y]=0
MS_MOVE(M_NT,M_POSX,M_POSY,,MS_ST)


;*****calcolo dati del cerchio*****
;diametro
IF M_TC==1
 MS_DIAM_REAL=((ABS(_XP-_XM)+ABS(_YP-_YM))/2)-(MS_D*2)
 MS_DIAM_ERR=(MS_DIAM_REAL-M_DIA)
ELSE
 MS_DIAM_REAL=((ABS(_XP-_XM)+ABS(_YP-_YM))/2)+(MS_D*2)
 MS_DIAM_ERR=(MS_DIAM_REAL-M_DIA)
ENDIF
;centro in x
MS_ERR_X=(_XP+_XM)/2
;centro in y
MS_ERR_Y=(_YP+_YM)/2
;********controllo tolleranza**********
IF M_TOLL<>0
 IF ABS(MS_DIAM_ERR)>=M_TOLL
  MS_ALM(203)
 ENDIF
ENDIF

;******** Correzione Utensile

IF M_CHECK<=1 GOTOF LBL10
IF M_DUPLO==0
M_DUPLO=1
ENDIF

IF MS_TOOLM==1
 T_INT=GETT(M_TOOLN,M_DUPLO)
 IF T_INT==-1 GOTOF ALARM5
ELSE
 IF NOT (ISNUMBER(M_TOOLN)) GOTOF ALARM5
 T_INT=TRUNC(NUMBER(M_TOOLN))
ENDIF

IF (M_TC==1) ;perno
IF M_CHECK==2  ;cor. raggio su geometria 
 $TC_DP6[T_INT,M_TOOLD]=$TC_DP6[T_INT,M_TOOLD]-(MS_DIAM_ERR/2)
 $TC_DP15[T_INT,M_TOOLD]=0
ELSE          ;cor. raggio su usura
 $TC_DP15[T_INT,M_TOOLD]=$TC_DP15[T_INT,M_TOOLD]-(MS_DIAM_ERR/2)
ENDIF
ENDIF

IF (M_TC<>1) ;foro
IF M_CHECK==2  ;cor. raggio su geometria 
 $TC_DP6[T_INT,M_TOOLD]=$TC_DP6[T_INT,M_TOOLD]+ (MS_DIAM_ERR/2)
 $TC_DP15[T_INT,M_TOOLD]=0
ELSE          ;cor. raggio su usura
 $TC_DP15[T_INT,M_TOOLD]=$TC_DP15[T_INT,M_TOOLD]+(MS_DIAM_ERR/2)
ENDIF
ENDIF

LBL10:

;*******aggiornamento origine**********
IF M_ORIG<>0
; modifica campo GROSSOLANO e resetta gli altri
   IF M_ORIG==$P_UIFRNUM ;origine da modificare uguale a origine attiva
    $P_UIFR[M_ORIG,MS_X,TR]=$P_UIFR[$P_UIFRNUM,MS_X,TR]+MS_ERR_X
    $P_UIFR[M_ORIG,MS_Y,TR]=$P_UIFR[$P_UIFRNUM,MS_Y,TR]+MS_ERR_Y
    $P_UIFR[M_ORIG,MS_X,FI]=0
    $P_UIFR[M_ORIG,MS_Y,FI]=0
    $P_UIFR[M_ORIG,MS_X,RT]=0
    $P_UIFR[M_ORIG,MS_Y,RT]=0
    $P_UIFR[M_ORIG,MS_X,SC]=1
    $P_UIFR[M_ORIG,MS_Y,SC]=1
    $P_UIFR[M_ORIG,MS_X,MI]=0
    $P_UIFR[M_ORIG,MS_Y,MI]=0
   ELSE ; M_ORIG<>$P_UIFRNUM ;origine da modificare diversa da origine attiva
    $P_UIFR[M_ORIG,MS_X,TR]=$P_UIFR[$P_UIFRNUM,MS_X,TR]+MS_ERR_X
    $P_UIFR[M_ORIG,MS_Y,TR]=$P_UIFR[$P_UIFRNUM,MS_Y,TR]+MS_ERR_Y
    $P_UIFR[M_ORIG,MS_X,FI]=0
    $P_UIFR[M_ORIG,MS_Y,FI]=0
    $P_UIFR[M_ORIG,MS_X,RT]=0
    $P_UIFR[M_ORIG,MS_Y,RT]=0
    $P_UIFR[M_ORIG,MS_X,SC]=1
    $P_UIFR[M_ORIG,MS_Y,SC]=1
    $P_UIFR[M_ORIG,MS_X,MI]=0
    $P_UIFR[M_ORIG,MS_Y,MI]=0
   ENDIF
ENDIF
;**************************************
TRANS
CALL AUXOUT ;richiamo ausiliare uscita
IF MS_ACT==1
 M=(MS_SOFF)
ENDIF
D=MS_DA
M17

