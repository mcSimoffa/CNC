PROC MPS_CAL(REAL M_DISTS,REAL M_OFSL,INT M_DIR)

;**********************************************
;*  CICLO DI CALIBRAZIONE CON TASTATORE       *
;*  SIEMENS 840D/828D VER 4.2    31/01/2014
;**********************************************

DEF REAL L_UT,R_UT,T_ACTIVE,D_ACTIVE
DEF REAL MEMORY_POS_1,M_SAFETY
DEF REAL P_1,P_2,P_3,P_4,P_A,P_B,P_R,P_L
MPS_INI
M=(MAR_TASTA_ON)
G4 F2
G94


;***********LETTURA DATI UTENSILE**************
T_ACTIVE=$P_TOOLNO
D_ACTIVE=$P_TOOL
L_UT=$TC_DP3[$P_TOOLNO,$P_TOOL]
R_UT=$TC_DP6[$P_TOOLNO,$P_TOOL]
D0
;**********************************************

;*******PREELABORAZIONE DATI INIZIALI**********
P_A=(MAR_LATO/2)+R_UT+M_DISTS ;pos diam rap
P_B=(MAR_LATO/2)+R_UT-MAR_C      ;pos diam lav

IF MAR_PROBE_L<>0
P_R=MAR_PROBE_L-MAR_DIR_L*(L_UT+M_DISTS)             ;pos lung rap
P_L=MAR_PROBE_L-MAR_DIR_L*(L_UT-2*M_DISTS)           ;pos lung lav
M_SAFETY=MAR_PROBE_L-MAR_DIR_L*(L_UT+MAR_SAFETY)
M_OFSL=MAR_PROBE_L-MAR_DIR_L*(L_UT-M_OFSL)
ENDIF

IF MAR_PROBE_L==0
P_R=L_UT-MAR_DIR_L*M_DISTS            ;pos lung rap
P_L=L_UT+MAR_DIR_L*2*M_DISTS          ;pos lung lav
M_SAFETY=L_UT-MAR_DIR_L*MAR_SAFETY
M_OFSL=L_UT+MAR_DIR_L*M_OFSL
ENDIF
;**********************************************

;****POSIZIONAMENTO ASSI PER CAL LUNGHEZZA*****
MPS_MOVE(MAR_AXIS_L,0)
SUPA G1 MEAS=MAR_INPUT G60 AX[MAR_AXIS_R]=MAR_PROBE_R AX[MAR_AXIS_P]=MAR_PROBE_P F=MAR_RAPIDO
MPS_MOVE(MAR_AXIS_L,M_SAFETY)
;MPS_MOVE(MAR_AXIS_P,MAR_PROBE_P)
;MPS_MOVE(MAR_AXIS_R,MAR_PROBE_R)
STOPRE
IF $AC_MEA[ABS(MAR_INPUT)]==0 GOTOF GOON ;controllo se tocco avvenuto
M5
D=D_ACTIVE
STOPRE
MPS_ALM(5) ;Tocco inaspettato
GOON:

MPS_MOVE(MAR_AXIS_L,P_R)

;**********************************************
MAR_FEED1=120/MAR_MM_INCH
MAR_FEED2=15/MAR_MM_INCH

;***************INIZIO TOCCHI L****************
MPS_TCH(MAR_AXIS_L,MAR_DIR_L,MAR_FEED1,P_L)
MPS_TCH(MAR_AXIS_L,MAR_DIR_L,MAR_FEED2,P_L)
MEMORY_POS_1=MAR_POS
STOPRE
MAR_RPM=1000*MAR_VT/(2*3.1416*R_UT)
;MAR_FEED1=MAR_RPM*MAR_TOLL_TOUCH*10
;MAR_FEED2=MAR_RPM*MAR_TOLL_TOUCH
IF MAR_RPM>400
MAR_RPM=400
ENDIF
MPS_MOVE(MAR_AXIS_L,P_R)
;**********************************************
S=MAR_RPM M=(M_DIR)

;***ELABORAZIONE DATI RILEVATI PER LUNGHEZZA***
IF MAR_PROBE_L<>0
P_1=MEMORY_POS_1+L_UT*MAR_DIR_L
STOPRE
MAR_MEAS_L=P_1    ;aggiorn origine
ENDIF

IF MAR_PROBE_L==0
P_1=MEMORY_POS_1
STOPRE
$TC_DP3[T_ACTIVE,D_ACTIVE]=P_1    ;aggiorn l_ut
MAR_MEAS_L=0
ENDIF
;**********************************************

;****POSIZIONAMENTO ASSI PER CAL RAGGIO********
MPS_MOVE(MAR_AXIS_L,P_R)
;SUPA G1 AX[MAR_AXIS_L]=P_R F=MAR_RAPIDO

IF MAR_TIPOCAL==3 GOTOF END

MPS_MOVE(MAR_AXIS_P,MAR_PROBE_P)
MPS_MOVE(MAR_AXIS_R,MAR_PROBE_R-MAR_DIR_R*P_A)
MPS_MOVE(MAR_AXIS_L,M_OFSL)

;**********************************************



;***************INIZIO TOCCHI R***** (1) ******
MPS_TCH(MAR_AXIS_R,MAR_DIR_R,MAR_FEED1,MAR_PROBE_R)
MPS_TCH(MAR_AXIS_R,MAR_DIR_R,MAR_FEED2,MAR_PROBE_R)
MEMORY_POS_1=MAR_POS
STOPRE
P_1=MEMORY_POS_1
;MPS_MOVE(MAR_AXIS_L,P_R)
;**********************************************
IF MAR_TIPOCAL==1 GOTOF CALCOLOR
;***************INIZIO TOCCHI R***** (2) ******
MPS_MOVE(MAR_AXIS_L,P_R)
MPS_MOVE(MAR_AXIS_R,MAR_PROBE_R+MAR_DIR_R*P_A)
MPS_MOVE(MAR_AXIS_L,M_OFSL)
MPS_TCH(MAR_AXIS_R,-MAR_DIR_R,MAR_FEED1,MAR_PROBE_R)
MPS_TCH(MAR_AXIS_R,-MAR_DIR_R,MAR_FEED2,MAR_PROBE_R)
MEMORY_POS_1=MAR_POS
STOPRE
P_2=MEMORY_POS_1
MPS_MOVE(MAR_AXIS_L,P_R)
;**********************************************

;***************INIZIO TOCCHI R***** (3) ******
MPS_MOVE(MAR_AXIS_R,(P_1+P_2)/2)
MPS_MOVE(MAR_AXIS_P,MAR_PROBE_P-MAR_DIR_R*P_A)
MPS_MOVE(MAR_AXIS_L,M_OFSL)
;SUPA G1 AX[MAR_AXIS_R]=(P_1+P_2)/2 F=MAR_RAPIDO
;SUPA G1 AX[MAR_AXIS_P]=MAR_PROBE_P-MAR_DIR_R*P_A F=MAR_RAPIDO
;SUPA G1 AX[MAR_AXIS_L]=M_OFSL F=MAR_RAPIDO
MPS_TCH(MAR_AXIS_P,MAR_DIR_R,MAR_FEED1,MAR_PROBE_P)
MPS_TCH(MAR_AXIS_P,MAR_DIR_R,MAR_FEED2,MAR_PROBE_P)
MEMORY_POS_1=MAR_POS
STOPRE
P_3=MEMORY_POS_1
MPS_MOVE(MAR_AXIS_L,P_R)
;**********************************************

;***************INIZIO TOCCHI R***** (4) ******
MPS_MOVE(MAR_AXIS_P,MAR_PROBE_P+MAR_DIR_R*P_A)
MPS_MOVE(MAR_AXIS_L,M_OFSL)
MPS_TCH(MAR_AXIS_P,-MAR_DIR_R,MAR_FEED1,MAR_PROBE_P)
MPS_TCH(MAR_AXIS_P,-MAR_DIR_R,MAR_FEED2,MAR_PROBE_P)
MEMORY_POS_1=MAR_POS
STOPRE
P_4=MEMORY_POS_1
MPS_MOVE(MAR_AXIS_L,P_R)
;**********************************************
MAR_PROBE_P=(P_3+P_4)/2

MPS_MOVE(MAR_AXIS_P,MAR_PROBE_P)
MPS_MOVE(MAR_AXIS_R,MAR_PROBE_R-MAR_DIR_R*P_A)
MPS_MOVE(MAR_AXIS_L,M_OFSL)
;**********************************************

;***************TOCCO FINALE R***** (1) ******
MPS_TCH(MAR_AXIS_R,MAR_DIR_R,MAR_FEED1,MAR_PROBE_R)
MPS_TCH(MAR_AXIS_R,MAR_DIR_R,MAR_FEED2,MAR_PROBE_R)
MEMORY_POS_1=MAR_POS
STOPRE
P_1=MEMORY_POS_1
MPS_MOVE(MAR_AXIS_L,P_R)


CALCOLOR:
;***ELABORAZIONE DATI RILEVATI PER RAGGIO ***
;aggiorn X
P_1=ABS(MAR_PROBE_R-MEMORY_POS_1)
MAR_MEAS_R=MAR_PROBE_R-MAR_DIR_R*(ABS(P_1)-(MAR_LATO/2)-R_UT)
STOPRE
GOTOF END
;**********************************************

;********GESTIONE ALLARMI**********************
ALARM4:  ;NUMERO GIRI TROPPO ELEVATO
SUPA G1 AX[MAR_AXIS_L]=MAR_PROBE_L-MAR_DIR_L*(MAR_SAFETY+L_UT)  F=MAR_RAPIDO
M5 G90
D=D_ACTIVE
STOPRE
MPS_ALM(4)
;**********************************************

;*************FINE CICLO***********************
END:
SUPA G1 AX[MAR_AXIS_L]=MAR_PROBE_L-MAR_DIR_L*(MAR_SAFETY+L_UT)  F=MAR_RAPIDO
M5 G90
M=(MAR_TASTA_OFF)
D=D_ACTIVE
M17
