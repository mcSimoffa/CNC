PROC MS_3CAL(INT M_NT,INT M_TC,REAL M_DIA,REAL M_Z,REAL M_ALFA,REAL M_BETA,REAL M_GAMMA)
DEF REAL MEX[3],MEY[3],M_POSZ,M_I,M_F
DEF REAL MS_X_SHIFT_ALFA,MS_Y_SHIFT_ALFA, MS_X_SHIFT_BETA,MS_Y_SHIFT_BETA,MS_X_SHIFT_GAMMA,MS_Y_SHIFT_GAMMA
DEF REAL MS_ABS_INPUT,PUNX[3],PUNY[3],PUDX[3],PUDY[3],M_DIST
DEF STRING[60] FILEINI
DEF STRING[60] AUXIN
DEF STRING[60] AUXOUT

;************************************
; CICLO DI CALIBRAZIONE PER SONDA
; CON TRE TOCCHI 
; SIEMENS 840D/828D  			
; VER 10.1 15/02/2016                  
;************************************

;** CONTROLLO SE SIMULAZIONE O TEST************
IF $P_SEARCH OR $P_ISTEST OR $P_SIM OR $P_DRYRUN
RET
ENDIF
;**********************************************

;***** GESTIONE PIU SONDE**********************
FILEINI="/_N_CUS_DIR/_N_MS_INIS"<<M_NT<<"_SPF"
AUXIN="/_N_CUS_DIR/_N_MS_IN"<<M_NT<<"_SPF"
AUXOUT="/_N_CUS_DIR/_N_MS_OUT"<<M_NT<<"_SPF"
STOPRE
CALL FILEINI  ;richiamo file ini
IF MS_ACT==1
M=(MS_SON)
G4 F1.2
ENDIF
CALL AUXIN    ;richiamo ausiliare ingresso
;**********************************************

;***** PARAMETRI DEL CICLO********
; ADDED FOR TOOL SHIFT
IF (MS_X_SHIFT==0) AND (MS_Y_SHIFT==0)		
	MS_D=$TC_DP6[$P_TOOLNO,$P_TOOL]
ELSE
	MS_D=MS_R_SPHERE					
ENDIF

MS_ABS_INPUT=ABS(MS_INPUTS)
M_POSZ=$AA_IW[MS_Z]-MS_L_TOOL

IF M_TC==1 ;sto usando un perno
M_I=-(M_DIA/2)-MS_D-MS_CS
M_F=-(M_DIA/2)+MS_D+MS_CS
ENDIF

IF M_TC==2 ;sto usando un foro
M_I=(M_DIA/2)-MS_D-MS_CS
M_F=(M_DIA/2)+MS_D+MS_CS
ENDIF

;calcolo punti di movimento
PUNX[0]=M_I*COS(M_ALFA)
PUNY[0]=M_I*SIN(M_ALFA)
PUNX[1]=M_I*COS(M_BETA)
PUNY[1]=M_I*SIN(M_BETA)
PUNX[2]=M_I*COS(M_GAMMA)
PUNY[2]=M_I*SIN(M_GAMMA)
PUDX[0]=M_F*COS(M_ALFA)
PUDY[0]=M_F*SIN(M_ALFA)
PUDX[1]=M_F*COS(M_BETA)
PUDY[1]=M_F*SIN(M_BETA)
PUDX[2]=M_F*COS(M_GAMMA)
PUDY[2]=M_F*SIN(M_GAMMA)

;***** mis primo punto *****
MS_MOVE(M_NT,PUNX[0],PUNY[0],,MS_RAPID)
MS_MOVE(M_NT,,,M_Z-MS_D,MS_RAPID)
G1 G90 G60 MEAS=MS_INPUTS F=MS_ST AX[MS_X]=(PUDX[0]-MS_X_SHIFT) AX[MS_Y]=(PUDY[0]-MS_Y_SHIFT)
MEX[0]=$AA_MW[MS_X]+MS_X_SHIFT
MEY[0]=$AA_MW[MS_Y]+MS_Y_SHIFT
IF $AC_MEA[MS_ABS_INPUT]==0
 MS_ALM(201)
ENDIF
G1 G90 G60 F=MS_RAPID AX[MS_X]=(PUNX[0]-MS_X_SHIFT) AX[MS_Y]=(PUNY[0]-MS_Y_SHIFT)

MS_MOVE(M_NT,PUNX[0],PUNY[0],,MS_RAPID)
IF M_TC<>2
MS_MOVE(M_NT,,,M_POSZ,MS_ST)
ENDIF

;***** mis secondo punto *****
MS_MOVE(M_NT,PUNX[1],PUNY[1],,MS_RAPID)
IF M_TC<>2
MS_MOVE(M_NT,,,M_Z-MS_D,MS_RAPID)
ENDIF
G1 G90 G60 MEAS=MS_INPUTS F=MS_ST AX[MS_X]=(PUDX[1]-MS_X_SHIFT) AX[MS_Y]=(PUDY[1]-MS_Y_SHIFT)
MEX[1]=$AA_MW[MS_X]+MS_X_SHIFT
MEY[1]=$AA_MW[MS_Y]+MS_Y_SHIFT
IF $AC_MEA[MS_ABS_INPUT]==0
 MS_ALM(201)
ENDIF
G1 G90 G60 F=MS_RAPID AX[MS_X]=(PUNX[1]-MS_X_SHIFT) AX[MS_Y]=(PUNY[1]-MS_Y_SHIFT)

MS_MOVE(M_NT,PUNX[1],PUNY[1],,MS_RAPID)
IF M_TC<>2
MS_MOVE(M_NT,,,M_POSZ,MS_ST)
ENDIF

;***** mis terzo punto *****

MS_MOVE(M_NT,PUNX[2],PUNY[2],,MS_RAPID)
IF M_TC<>2
MS_MOVE(M_NT,,,M_Z-MS_D,MS_RAPID)
ENDIF
G1 G90 G60 MEAS=MS_INPUTS F=MS_ST AX[MS_X]=(PUDX[2]-MS_X_SHIFT) AX[MS_Y]=(PUDY[2]-MS_Y_SHIFT)
MEX[2]=$AA_MW[MS_X]+MS_X_SHIFT
MEY[2]=$AA_MW[MS_Y]+MS_Y_SHIFT
IF $AC_MEA[MS_ABS_INPUT]==0
 MS_ALM(201)
ENDIF
G1 G90 G60 F=MS_RAPID AX[MS_X]=(PUNX[2]-MS_X_SHIFT) AX[MS_Y]=(PUNY[2]-MS_Y_SHIFT)

MS_MOVE(M_NT,PUNX[2],PUNY[2],,MS_RAPID)
MS_MOVE(M_NT,,,M_POSZ,MS_ST)
MS_MOVE(M_NT,0,0,,MS_ST)

;****************************

;*****memorizzazione dati tastatore****
MS_ALFA[M_NT]=ABS((SQRT(POT(MEX[0])+POT(MEY[0])))-(M_DIA/2))
MS_BETA[M_NT]=ABS((SQRT(POT(MEX[1])+POT(MEY[1])))-(M_DIA/2))
MS_GAMMA[M_NT]=ABS((SQRT(POT(MEX[2])+POT(MEY[2])))-(M_DIA/2))
;**************************************

CALL AUXOUT ;richiamo ausiliare uscita
IF MS_ACT==1
M=(MS_SOFF)
ENDIF
D=MS_DA
M17

ALLARME1:
MS_ALM(202)
M17
 
